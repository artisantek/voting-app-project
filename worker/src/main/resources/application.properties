# Logging
logging.level.com.example.voting=INFO
logging.level.org.springframework.kafka=INFO

# Kafka Consumer Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=vote-processor-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Configure the JsonDeserializer
# IMPORTANT: Allow deserialization only for our model package for security. Avoid '*'.
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.voting.model
# Specify the default type Jackson should try to deserialize the JSON value into
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.voting.model.VoteMessage

# Kafka Topic Name (used in @KafkaListener)
app.kafka.topic.votes=votes


# Database Configuration (PostgreSQL)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/voting_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
# 'update' is convenient for dev, use 'validate' or 'none' in prod
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Set spring.jpa.show-sql to true for debugging SQL, false for cleaner logs
spring.jpa.show-sql=false